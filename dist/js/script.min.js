function scrollMenu(){const e=Array.from(document.querySelectorAll("[data-link]")),t=Array.from(document.querySelectorAll("[data-anchor]")),o=document.querySelector(".header"),n="active";let c;function l(t){e.forEach((e=>e.classList.remove(n))),t.target.classList.add(n)}function a(e){const t=e.target.dataset.link,o=document.querySelector(`.${t}`).getBoundingClientRect().top+1+scrollY;window.scrollTo({top:o-d(),behavior:"smooth"})}function d(){return o.getBoundingClientRect().height}function i(){window.pageYOffset>d()?(o.classList.add("header_scroll"),document.body.style.paddingTop=d()+"px"):(o.classList.remove("header_scroll"),document.body.style.paddingTop="0")}i(),window.addEventListener("scroll",(o=>{clearTimeout(c),c=setTimeout((()=>{!function(){let o=t.find((e=>e.getBoundingClientRect().top-d()<=0&&e.getBoundingClientRect().bottom-d()>0));if(o){let t=e.find((e=>e.dataset.link===o.dataset.anchor));e.forEach((e=>e.classList.remove(n))),t&&t.classList.add(n)}else e.forEach((e=>e.classList.remove(n)))}(),i()}),100)})),e.forEach((e=>{e.addEventListener("click",l),e.addEventListener("click",a)}))}window.onload=()=>{scrollMenu()};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJzY3JvbGxNZW51IiwibWVudUl0ZW1zIiwiQXJyYXkiLCJmcm9tIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYmxvY2tzIiwiaGVhZGVyIiwicXVlcnlTZWxlY3RvciIsImFjdGl2ZSIsImlzU2Nyb2xsaW5nIiwibWFrZUxpbmtBY3RpdmVCeUNsaWNrIiwiZSIsImZvckVhY2giLCJpdGVtIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwidGFyZ2V0IiwiYWRkIiwibW92ZVRvQW5jaG9yIiwiYW5jaG9yIiwiZGF0YXNldCIsImxpbmsiLCJhbmNob3JUb3AiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0b3AiLCJzY3JvbGxZIiwid2luZG93Iiwic2Nyb2xsVG8iLCJjb21wSGVhZGVySGVpZ2h0IiwiYmVoYXZpb3IiLCJoZWlnaHQiLCJoZWFkZXJTY3JvbGxpbmciLCJwYWdlWU9mZnNldCIsImJvZHkiLCJzdHlsZSIsInBhZGRpbmdUb3AiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImFjdGl2ZUJsb2NrIiwiZmluZCIsImJsb2NrIiwiYm90dG9tIiwiYWN0aXZlSXRlbSIsIm1ha2VMaW5rQWt0aXZlQnlTY3JvbGwiLCJvbmxvYWQiXSwibWFwcGluZ3MiOiJBQU9BLFNBQVNBLGFBQ1AsTUFBTUMsRUFBWUMsTUFBTUMsS0FBS0MsU0FBU0MsaUJBQWlCLGdCQUNqREMsRUFBU0osTUFBTUMsS0FBS0MsU0FBU0MsaUJBQWlCLGtCQUM5Q0UsRUFBU0gsU0FBU0ksY0FBYyxXQUNoQ0MsRUFBUyxTQUNmLElBQUlDLEVBaUJKLFNBQVNDLEVBQXNCQyxHQUM3QlgsRUFBVVksU0FBU0MsR0FBU0EsRUFBS0MsVUFBVUMsT0FBT1AsS0FDbERHLEVBQUVLLE9BQU9GLFVBQVVHLElBQUlULEdBR3pCLFNBQVNVLEVBQWFQLEdBQ3BCLE1BQU1RLEVBQVNSLEVBQUVLLE9BQU9JLFFBQVFDLEtBQzFCQyxFQUNKbkIsU0FBU0ksY0FBYyxJQUFJWSxLQUFVSSx3QkFBd0JDLElBQzdELEVBQ0FDLFFBRUZDLE9BQU9DLFNBQVMsQ0FDZEgsSUFBS0YsRUFBWU0sSUFDakJDLFNBQVUsV0FzQmQsU0FBU0QsSUFDUCxPQUFPdEIsRUFBT2lCLHdCQUF3Qk8sT0FFeEMsU0FBU0MsSUFDSEwsT0FBT00sWUFBY0osS0FDdkJ0QixFQUFPUSxVQUFVRyxJQUFJLGlCQUNyQmQsU0FBUzhCLEtBQUtDLE1BQU1DLFdBQWFQLElBQXFCLE9BRXREdEIsRUFBT1EsVUFBVUMsT0FBTyxpQkFDeEJaLFNBQVM4QixLQUFLQyxNQUFNQyxXQUFhLEtBNURyQ0osSUFFQUwsT0FBT1UsaUJBQWlCLFVBQVd6QixJQUNqQzBCLGFBQWE1QixHQUNiQSxFQUFjNkIsWUFBVyxNQTZCM0IsV0FDRSxJQUFJQyxFQUFjbEMsRUFBT21DLE1BQ3RCQyxHQUNDQSxFQUFNbEIsd0JBQXdCQyxJQUFNSSxLQUFzQixHQUMxRGEsRUFBTWxCLHdCQUF3Qm1CLE9BQVNkLElBQXFCLElBRWhFLEdBQUlXLEVBQWEsQ0FDZixJQUFJSSxFQUFhM0MsRUFBVXdDLE1BQ3hCM0IsR0FBU0EsRUFBS08sUUFBUUMsT0FBU2tCLEVBQVluQixRQUFRRCxTQUd0RG5CLEVBQVVZLFNBQVNDLEdBQVNBLEVBQUtDLFVBQVVDLE9BQU9QLEtBQzlDbUMsR0FBWUEsRUFBVzdCLFVBQVVHLElBQUlULFFBRXpDUixFQUFVWSxTQUFTQyxHQUFTQSxFQUFLQyxVQUFVQyxPQUFPUCxLQTFDbERvQyxHQUNBYixNQUNDLFFBR0wvQixFQUFVWSxTQUFTQyxJQUNqQkEsRUFBS3VCLGlCQUFpQixRQUFTMUIsR0FDL0JHLEVBQUt1QixpQkFBaUIsUUFBU2xCLE1BMUJuQ1EsT0FBT21CLE9BQVMsS0FDZDlDIiwiZmlsZSI6InNjcmlwdC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cub25sb2FkID0gKCkgPT4ge1xyXG4gIHNjcm9sbE1lbnUoKTtcclxufTtcclxuXHJcbi8qICAg0L/RgNC+0LrRgNGD0YLQutCwINC40Lcg0LzQtdC90Y4g0LTQviDQvdGD0LbQvdC+0LPQviDQsdC70L7QutCwXHJcbiAg0Lgg0L7Qv9GA0LXQtNC10LvQtdC90LjQtSDQsNC60YLQuNCy0L3QvtC5INGB0YHRi9C70LrQuCDQv9GA0Lgg0YHQutGA0L7Qu9C70LUgKi9cclxuXHJcbmZ1bmN0aW9uIHNjcm9sbE1lbnUoKSB7XHJcbiAgY29uc3QgbWVudUl0ZW1zID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtbGlua11cIikpO1xyXG4gIGNvbnN0IGJsb2NrcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWFuY2hvcl1cIikpO1xyXG4gIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGVhZGVyXCIpO1xyXG4gIGNvbnN0IGFjdGl2ZSA9IFwiYWN0aXZlXCI7XHJcbiAgbGV0IGlzU2Nyb2xsaW5nO1xyXG5cclxuICBoZWFkZXJTY3JvbGxpbmcoKTtcclxuXHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgKGUpID0+IHtcclxuICAgIGNsZWFyVGltZW91dChpc1Njcm9sbGluZyk7XHJcbiAgICBpc1Njcm9sbGluZyA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBtYWtlTGlua0FrdGl2ZUJ5U2Nyb2xsKCk7XHJcbiAgICAgIGhlYWRlclNjcm9sbGluZygpO1xyXG4gICAgfSwgMTAwKTtcclxuICB9KTtcclxuXHJcbiAgbWVudUl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG1ha2VMaW5rQWN0aXZlQnlDbGljayk7XHJcbiAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBtb3ZlVG9BbmNob3IpO1xyXG4gIH0pO1xyXG5cclxuICBmdW5jdGlvbiBtYWtlTGlua0FjdGl2ZUJ5Q2xpY2soZSkge1xyXG4gICAgbWVudUl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IGl0ZW0uY2xhc3NMaXN0LnJlbW92ZShhY3RpdmUpKTtcclxuICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoYWN0aXZlKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIG1vdmVUb0FuY2hvcihlKSB7XHJcbiAgICBjb25zdCBhbmNob3IgPSBlLnRhcmdldC5kYXRhc2V0Lmxpbms7XHJcbiAgICBjb25zdCBhbmNob3JUb3AgPVxyXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHthbmNob3J9YCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wICtcclxuICAgICAgMSArXHJcbiAgICAgIHNjcm9sbFk7XHJcblxyXG4gICAgd2luZG93LnNjcm9sbFRvKHtcclxuICAgICAgdG9wOiBhbmNob3JUb3AgLSBjb21wSGVhZGVySGVpZ2h0KCksXHJcbiAgICAgIGJlaGF2aW9yOiBcInNtb290aFwiLFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBtYWtlTGlua0FrdGl2ZUJ5U2Nyb2xsKCkge1xyXG4gICAgbGV0IGFjdGl2ZUJsb2NrID0gYmxvY2tzLmZpbmQoXHJcbiAgICAgIChibG9jaykgPT5cclxuICAgICAgICBibG9jay5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgLSBjb21wSGVhZGVySGVpZ2h0KCkgPD0gMCAmJlxyXG4gICAgICAgIGJsb2NrLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmJvdHRvbSAtIGNvbXBIZWFkZXJIZWlnaHQoKSA+IDBcclxuICAgICk7XHJcbiAgICBpZiAoYWN0aXZlQmxvY2spIHtcclxuICAgICAgbGV0IGFjdGl2ZUl0ZW0gPSBtZW51SXRlbXMuZmluZChcclxuICAgICAgICAoaXRlbSkgPT4gaXRlbS5kYXRhc2V0LmxpbmsgPT09IGFjdGl2ZUJsb2NrLmRhdGFzZXQuYW5jaG9yXHJcbiAgICAgICk7XHJcblxyXG4gICAgICBtZW51SXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4gaXRlbS5jbGFzc0xpc3QucmVtb3ZlKGFjdGl2ZSkpO1xyXG4gICAgICBpZiAoYWN0aXZlSXRlbSkgYWN0aXZlSXRlbS5jbGFzc0xpc3QuYWRkKGFjdGl2ZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBtZW51SXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4gaXRlbS5jbGFzc0xpc3QucmVtb3ZlKGFjdGl2ZSkpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY29tcEhlYWRlckhlaWdodCgpIHtcclxuICAgIHJldHVybiBoZWFkZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0O1xyXG4gIH1cclxuICBmdW5jdGlvbiBoZWFkZXJTY3JvbGxpbmcoKSB7XHJcbiAgICBpZiAod2luZG93LnBhZ2VZT2Zmc2V0ID4gY29tcEhlYWRlckhlaWdodCgpKSB7XHJcbiAgICAgIGhlYWRlci5jbGFzc0xpc3QuYWRkKFwiaGVhZGVyX3Njcm9sbFwiKTtcclxuICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5wYWRkaW5nVG9wID0gY29tcEhlYWRlckhlaWdodCgpICsgXCJweFwiO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJoZWFkZXJfc2Nyb2xsXCIpO1xyXG4gICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdUb3AgPSBcIjBcIjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19